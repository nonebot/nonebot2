[tool.poetry]
name = "nonebot2"
version = "2.0.0"
description = "An asynchronous python bot framework."
authors = ["yanyongyu <yyy@nonebot.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://nonebot.dev/"
repository = "https://github.com/nonebot/nonebot2"
documentation = "https://nonebot.dev/"
keywords = ["bot", "qq", "qqbot", "mirai", "coolq"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: Robot Framework",
  "Framework :: Robot Framework :: Library",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3"
]
packages = [
  { include = "nonebot" },
]
include = ["nonebot/py.typed"]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/nonebot/nonebot2/issues"
"Changelog" = "https://nonebot.dev/changelog"
"Funding" = "https://afdian.net/@nonebot"

[tool.poetry.dependencies]
python = "^3.8"
yarl = "^1.7.2"
pygtrie = "^2.4.1"
loguru = ">=0.6.0,<1.0.0"
typing-extensions = ">=4.0.0,<5.0.0"
tomli = { version = "^2.0.1", python = "<3.11" }
pydantic = { version = "^1.10.0", extras = ["dotenv"] }

websockets = { version = ">=10.0", optional = true }
Quart = { version = ">=0.18.0,<1.0.0", optional = true }
fastapi = { version = ">=0.93.0,<1.0.0", optional = true }
aiohttp = { version = "^3.7.4", extras = ["speedups"], optional = true }
httpx = { version = ">=0.20.0,<1.0.0", extras = ["http2"], optional = true }
uvicorn = { version = ">=0.20.0,<1.0.0", extras = ["standard"], optional = true }

[tool.poetry.group.dev.dependencies]
pycln = "^2.1.2"
isort = "^5.10.1"
black = "^23.1.0"
nonemoji = "^0.1.2"
pre-commit = "^3.0.0"

[tool.poetry.group.test.dependencies]
nonebug = "^0.3.0"
pytest-cov = "^4.0.0"
pytest-xdist = "^3.0.2"
pytest-asyncio = "^0.21.0"
coverage-conditional-plugin = "^0.8.0"

[tool.poetry.group.docs.dependencies]
nb-autodoc = "^1.0.0a5"

[tool.poetry.extras]
httpx = ["httpx"]
aiohttp = ["aiohttp"]
websockets = ["websockets"]
quart = ["quart", "uvicorn"]
fastapi = ["fastapi", "uvicorn"]
all = ["fastapi", "quart", "aiohttp", "httpx", "websockets", "uvicorn"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "--cov=nonebot --cov-append --cov-report=term-missing"
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
'''

[tool.isort]
profile = "black"
line_length = 88
length_sort = true
skip_gitignore = true
force_sort_within_sections = true
src_paths = ["nonebot", "tests"]
extra_standard_library = ["typing_extensions"]

[tool.pycln]
path = "."
all = false

[tool.pyright]
reportShadowedImports = false
pythonVersion = "3.8"
pythonPlatform = "All"
executionEnvironments = [
  { root = "./tests", extraPaths = ["./"] },
  { root = "./" },
]


[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
